1786 unique words in the list provided.

Longest length words in list - 14 letters each - unique letters:

ADMIN ISTRA TION       =>     ADMINSTRIO       10 unique
CHARA CTERI STIC       =>     CHARTEIS	       8 unique
INTER PRETA TION       =>     INTERPAIO	       9 unique
REPRE SENTA TION       =>     REPRSNTAIO       10 unique
REPRE SENTA TIVE       =>     REPRSNTAIV       10 unique
RESPO NSIBI LITY       =>     RESPONIBLTY      11 unique

Something unclear in the challenge, is what limits there are on the
replacements within a word - e.g. can a letter be replaced by a
double-digit? If yes, there could technically be infinite?

9! = 362880
Easy to find all the squares up to this number.

----

Idea: find all anagrams, by counting the quantity of alphabetical
chars, within an array. Words themselves do not need to be stored.

int8 quantity_of_each_alpha_char[1786 * 26]
[ <quantity of A>, <quantity of B>, <quantity of C>, ... ]
1786 * 26 * 8 / 1024 = ~350mb

int8 quantity_of_total_chars[1786]
[ <word length of line 1, word length of line 2, ... ]

----

It seems that all the anagrams do not have more than 9 unique letters.
So presumably the digit replacements are single digits only!

ACT CAT
ARISE RAISE
BOARD BROAD
CARE RACE
CENTRE RECENT
COURSE SOURCE
CREATION REACTION	=> ACEI NORT
CREDIT DIRECT
DANGER GARDEN
DEAL LEAD
DOG GOD
EARN NEAR
EARTH HEART
EAST SEAT
EAT TEA
EXCEPT EXPECT
FILE LIFE
FORM FROM
FORMER REFORM
HATE HEAT
HOW WHO
IGNORE REGION
INTRODUCE REDUCTION	=> CDEI NORT U
ITEM TIME
ITS SIT
LEAST STEAL
MALE MEAL
MEAN NAME
NIGHT THING
NO ON
NOTE TONE
NOW OWN
PHASE SHAPE
POST SPOT
POST STOP
QUIET QUITE
RATE TEAR
SHEET THESE
SHOUT SOUTH
SHUT THUS
SIGN SING
SPOT STOP
SURE USER
THROW WORTH

----

Once the squares < 362880 are generated, and the anagrams are found,
how to match the two together?

There are x possible combinations of 1-digit unique numbers, where:

The maximum number to check if square would be:
987654321 = ~1,000,000,000
31623 ^ 2 =  1,000,014,129

Fortunately INTRODUCE & REDUCTION are 9 digits, so perhaps find all
the square numbers within that, then try and match those found to the
anagram pair.

----

I N T R O D U C E
R E D U C T I O N

Sample data...

1 3 9 8 5 4 2 7 6  @ 11826
1 5 2 8 4 3 7 6 9  @ 12363
1 5 7 3 2 6 8 4 9  @ 12543
2 1 5 3 8 4 9 7 6  @ 14676
2 4 5 8 9 3 7 6 1  @ 15681
2 5 4 8 1 7 3 6 9  @ 15963
3 2 6 5 9 7 1 8 4  @ 18072
3 6 1 8 7 4 5 2 9  @ 19023

The micro algorithm would work as follows:
- Select 2 numbers using combinatorial iteration
- Select 1st letter from INTRODUCE, find position of digit in 1st number
- Select same letter from REDUCTION, find position of digit in 2nd number
- Compare digits, if true continue, else return fail
- Select next letter, etc.
